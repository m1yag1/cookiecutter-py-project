name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run linting
        run: uv run ruff check hooks tests

      - name: Run tests
        run: uv run pytest tests -v --cov=hooks --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.12'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  template-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install 3.12

      - name: Install cookiecutter
        run: uv tool install cookiecutter

      - name: Test template generation
        run: |
          uv tool run cookiecutter . --no-input --overwrite-if-exists
          cd my_awesome_project
          ls -la

      - name: Test generated project setup
        run: |
          cd my_awesome_project
          uv sync --group dev
          uv run pytest tests -v
